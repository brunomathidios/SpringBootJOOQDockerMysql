/*
 * This file is generated by jOOQ.
 */
package br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables;


import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Indexes;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Keys;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Ordernow;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.records.OdnProductRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OdnProduct extends TableImpl<OdnProductRecord> {

    private static final long serialVersionUID = 1665189411;

    /**
     * The reference instance of <code>ordernow.odn_product</code>
     */
    public static final OdnProduct ODN_PRODUCT = new OdnProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OdnProductRecord> getRecordType() {
        return OdnProductRecord.class;
    }

    /**
     * The column <code>ordernow.odn_product.id_product</code>.
     */
    public final TableField<OdnProductRecord, UInteger> ID_PRODUCT = createField("id_product", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>ordernow.odn_product.nm_product</code>.
     */
    public final TableField<OdnProductRecord, String> NM_PRODUCT = createField("nm_product", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>ordernow.odn_product.id_restaurant</code>.
     */
    public final TableField<OdnProductRecord, UInteger> ID_RESTAURANT = createField("id_restaurant", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>ordernow.odn_product.price_product</code>.
     */
    public final TableField<OdnProductRecord, BigDecimal> PRICE_PRODUCT = createField("price_product", org.jooq.impl.SQLDataType.DECIMAL(7, 2), this, "");

    /**
     * Create a <code>ordernow.odn_product</code> table reference
     */
    public OdnProduct() {
        this(DSL.name("odn_product"), null);
    }

    /**
     * Create an aliased <code>ordernow.odn_product</code> table reference
     */
    public OdnProduct(String alias) {
        this(DSL.name(alias), ODN_PRODUCT);
    }

    /**
     * Create an aliased <code>ordernow.odn_product</code> table reference
     */
    public OdnProduct(Name alias) {
        this(alias, ODN_PRODUCT);
    }

    private OdnProduct(Name alias, Table<OdnProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private OdnProduct(Name alias, Table<OdnProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> OdnProduct(Table<O> child, ForeignKey<O, OdnProductRecord> key) {
        super(child, key, ODN_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ordernow.ORDERNOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ODN_PRODUCT_ID_RESTAURANT, Indexes.ODN_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OdnProductRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ODN_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OdnProductRecord> getPrimaryKey() {
        return Keys.KEY_ODN_PRODUCT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OdnProductRecord>> getKeys() {
        return Arrays.<UniqueKey<OdnProductRecord>>asList(Keys.KEY_ODN_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OdnProductRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OdnProductRecord, ?>>asList(Keys.ODN_PRODUCT_IBFK_1);
    }

    public OdnRestaurant odnRestaurant() {
        return new OdnRestaurant(this, Keys.ODN_PRODUCT_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OdnProduct as(String alias) {
        return new OdnProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OdnProduct as(Name alias) {
        return new OdnProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OdnProduct rename(String name) {
        return new OdnProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OdnProduct rename(Name name) {
        return new OdnProduct(name, null);
    }
}
