/*
 * This file is generated by jOOQ.
 */
package br.com.mathidios.springboot.jooq.docker.mysql.model.jooq;


import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.OdnDishe;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.OdnOrder;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.OdnOrderProduct;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.OdnProduct;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.OdnRestaurant;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.OdnUser;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.records.OdnDisheRecord;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.records.OdnOrderProductRecord;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.records.OdnOrderRecord;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.records.OdnProductRecord;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.records.OdnRestaurantRecord;
import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.records.OdnUserRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.UInteger;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>ordernow</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<OdnDisheRecord, UInteger> IDENTITY_ODN_DISHE = Identities0.IDENTITY_ODN_DISHE;
    public static final Identity<OdnOrderRecord, UInteger> IDENTITY_ODN_ORDER = Identities0.IDENTITY_ODN_ORDER;
    public static final Identity<OdnOrderProductRecord, UInteger> IDENTITY_ODN_ORDER_PRODUCT = Identities0.IDENTITY_ODN_ORDER_PRODUCT;
    public static final Identity<OdnProductRecord, UInteger> IDENTITY_ODN_PRODUCT = Identities0.IDENTITY_ODN_PRODUCT;
    public static final Identity<OdnRestaurantRecord, UInteger> IDENTITY_ODN_RESTAURANT = Identities0.IDENTITY_ODN_RESTAURANT;
    public static final Identity<OdnUserRecord, UInteger> IDENTITY_ODN_USER = Identities0.IDENTITY_ODN_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<OdnDisheRecord> KEY_ODN_DISHE_PRIMARY = UniqueKeys0.KEY_ODN_DISHE_PRIMARY;
    public static final UniqueKey<OdnOrderRecord> KEY_ODN_ORDER_PRIMARY = UniqueKeys0.KEY_ODN_ORDER_PRIMARY;
    public static final UniqueKey<OdnOrderProductRecord> KEY_ODN_ORDER_PRODUCT_PRIMARY = UniqueKeys0.KEY_ODN_ORDER_PRODUCT_PRIMARY;
    public static final UniqueKey<OdnProductRecord> KEY_ODN_PRODUCT_PRIMARY = UniqueKeys0.KEY_ODN_PRODUCT_PRIMARY;
    public static final UniqueKey<OdnRestaurantRecord> KEY_ODN_RESTAURANT_PRIMARY = UniqueKeys0.KEY_ODN_RESTAURANT_PRIMARY;
    public static final UniqueKey<OdnUserRecord> KEY_ODN_USER_PRIMARY = UniqueKeys0.KEY_ODN_USER_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<OdnOrderRecord, OdnUserRecord> ODN_ORDER_IBFK_2 = ForeignKeys0.ODN_ORDER_IBFK_2;
    public static final ForeignKey<OdnOrderRecord, OdnRestaurantRecord> ODN_ORDER_IBFK_1 = ForeignKeys0.ODN_ORDER_IBFK_1;
    public static final ForeignKey<OdnOrderProductRecord, OdnOrderRecord> ODN_ORDER_PRODUCT_IBFK_1 = ForeignKeys0.ODN_ORDER_PRODUCT_IBFK_1;
    public static final ForeignKey<OdnOrderProductRecord, OdnProductRecord> ODN_ORDER_PRODUCT_IBFK_2 = ForeignKeys0.ODN_ORDER_PRODUCT_IBFK_2;
    public static final ForeignKey<OdnProductRecord, OdnRestaurantRecord> ODN_PRODUCT_IBFK_1 = ForeignKeys0.ODN_PRODUCT_IBFK_1;
    public static final ForeignKey<OdnRestaurantRecord, OdnDisheRecord> ODN_RESTAURANT_IBFK_1 = ForeignKeys0.ODN_RESTAURANT_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<OdnDisheRecord, UInteger> IDENTITY_ODN_DISHE = Internal.createIdentity(OdnDishe.ODN_DISHE, OdnDishe.ODN_DISHE.ID_DISHE);
        public static Identity<OdnOrderRecord, UInteger> IDENTITY_ODN_ORDER = Internal.createIdentity(OdnOrder.ODN_ORDER, OdnOrder.ODN_ORDER.ID_ORDER);
        public static Identity<OdnOrderProductRecord, UInteger> IDENTITY_ODN_ORDER_PRODUCT = Internal.createIdentity(OdnOrderProduct.ODN_ORDER_PRODUCT, OdnOrderProduct.ODN_ORDER_PRODUCT.ID_ORDER_PRODUCT);
        public static Identity<OdnProductRecord, UInteger> IDENTITY_ODN_PRODUCT = Internal.createIdentity(OdnProduct.ODN_PRODUCT, OdnProduct.ODN_PRODUCT.ID_PRODUCT);
        public static Identity<OdnRestaurantRecord, UInteger> IDENTITY_ODN_RESTAURANT = Internal.createIdentity(OdnRestaurant.ODN_RESTAURANT, OdnRestaurant.ODN_RESTAURANT.ID_RESTAURANT);
        public static Identity<OdnUserRecord, UInteger> IDENTITY_ODN_USER = Internal.createIdentity(OdnUser.ODN_USER, OdnUser.ODN_USER.ID_USER);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<OdnDisheRecord> KEY_ODN_DISHE_PRIMARY = Internal.createUniqueKey(OdnDishe.ODN_DISHE, "KEY_odn_dishe_PRIMARY", OdnDishe.ODN_DISHE.ID_DISHE);
        public static final UniqueKey<OdnOrderRecord> KEY_ODN_ORDER_PRIMARY = Internal.createUniqueKey(OdnOrder.ODN_ORDER, "KEY_odn_order_PRIMARY", OdnOrder.ODN_ORDER.ID_ORDER);
        public static final UniqueKey<OdnOrderProductRecord> KEY_ODN_ORDER_PRODUCT_PRIMARY = Internal.createUniqueKey(OdnOrderProduct.ODN_ORDER_PRODUCT, "KEY_odn_order_product_PRIMARY", OdnOrderProduct.ODN_ORDER_PRODUCT.ID_ORDER_PRODUCT);
        public static final UniqueKey<OdnProductRecord> KEY_ODN_PRODUCT_PRIMARY = Internal.createUniqueKey(OdnProduct.ODN_PRODUCT, "KEY_odn_product_PRIMARY", OdnProduct.ODN_PRODUCT.ID_PRODUCT);
        public static final UniqueKey<OdnRestaurantRecord> KEY_ODN_RESTAURANT_PRIMARY = Internal.createUniqueKey(OdnRestaurant.ODN_RESTAURANT, "KEY_odn_restaurant_PRIMARY", OdnRestaurant.ODN_RESTAURANT.ID_RESTAURANT);
        public static final UniqueKey<OdnUserRecord> KEY_ODN_USER_PRIMARY = Internal.createUniqueKey(OdnUser.ODN_USER, "KEY_odn_user_PRIMARY", OdnUser.ODN_USER.ID_USER);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<OdnOrderRecord, OdnUserRecord> ODN_ORDER_IBFK_2 = Internal.createForeignKey(br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Keys.KEY_ODN_USER_PRIMARY, OdnOrder.ODN_ORDER, "odn_order_ibfk_2", OdnOrder.ODN_ORDER.ID_USER);
        public static final ForeignKey<OdnOrderRecord, OdnRestaurantRecord> ODN_ORDER_IBFK_1 = Internal.createForeignKey(br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Keys.KEY_ODN_RESTAURANT_PRIMARY, OdnOrder.ODN_ORDER, "odn_order_ibfk_1", OdnOrder.ODN_ORDER.ID_RESTAURANT);
        public static final ForeignKey<OdnOrderProductRecord, OdnOrderRecord> ODN_ORDER_PRODUCT_IBFK_1 = Internal.createForeignKey(br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Keys.KEY_ODN_ORDER_PRIMARY, OdnOrderProduct.ODN_ORDER_PRODUCT, "odn_order_product_ibfk_1", OdnOrderProduct.ODN_ORDER_PRODUCT.ID_ORDER);
        public static final ForeignKey<OdnOrderProductRecord, OdnProductRecord> ODN_ORDER_PRODUCT_IBFK_2 = Internal.createForeignKey(br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Keys.KEY_ODN_PRODUCT_PRIMARY, OdnOrderProduct.ODN_ORDER_PRODUCT, "odn_order_product_ibfk_2", OdnOrderProduct.ODN_ORDER_PRODUCT.ID_PRODUCT);
        public static final ForeignKey<OdnProductRecord, OdnRestaurantRecord> ODN_PRODUCT_IBFK_1 = Internal.createForeignKey(br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Keys.KEY_ODN_RESTAURANT_PRIMARY, OdnProduct.ODN_PRODUCT, "odn_product_ibfk_1", OdnProduct.ODN_PRODUCT.ID_RESTAURANT);
        public static final ForeignKey<OdnRestaurantRecord, OdnDisheRecord> ODN_RESTAURANT_IBFK_1 = Internal.createForeignKey(br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.Keys.KEY_ODN_DISHE_PRIMARY, OdnRestaurant.ODN_RESTAURANT, "odn_restaurant_ibfk_1", OdnRestaurant.ODN_RESTAURANT.ID_DISHE);
    }
}
