/*
 * This file is generated by jOOQ.
 */
package br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.records;


import br.com.mathidios.springboot.jooq.docker.mysql.model.jooq.tables.OdnDishe;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OdnDisheRecord extends UpdatableRecordImpl<OdnDisheRecord> implements Record2<UInteger, String> {

    private static final long serialVersionUID = 1510583072;

    /**
     * Setter for <code>ordernow.odn_dishe.id_dishe</code>.
     */
    public void setIdDishe(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>ordernow.odn_dishe.id_dishe</code>.
     */
    public UInteger getIdDishe() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>ordernow.odn_dishe.nm_dishe</code>.
     */
    public void setNmDishe(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ordernow.odn_dishe.nm_dishe</code>.
     */
    public String getNmDishe() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return OdnDishe.ODN_DISHE.ID_DISHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return OdnDishe.ODN_DISHE.NM_DISHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getIdDishe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getNmDishe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getIdDishe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNmDishe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OdnDisheRecord value1(UInteger value) {
        setIdDishe(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OdnDisheRecord value2(String value) {
        setNmDishe(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OdnDisheRecord values(UInteger value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OdnDisheRecord
     */
    public OdnDisheRecord() {
        super(OdnDishe.ODN_DISHE);
    }

    /**
     * Create a detached, initialised OdnDisheRecord
     */
    public OdnDisheRecord(UInteger idDishe, String nmDishe) {
        super(OdnDishe.ODN_DISHE);

        set(0, idDishe);
        set(1, nmDishe);
    }
}
